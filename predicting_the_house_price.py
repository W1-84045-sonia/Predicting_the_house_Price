# -*- coding: utf-8 -*-
"""Predicting the House Price.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rff0DIGi6V5ET5rKhBGYpjs9u2c_tS5P
"""

#Importing Librarires
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

#Creating a Data Frame
boston = load_boston()
df = pd.DataFrame(boston.data)

#EDA- Exploratory Data Analysis
df.head()

#Adding columns
df.columns = boston.feature_names

df.head()

#Adding the Targets columns into the Data Frame
df['PRICE'] = boston.target

df.head()

df.tail()

df.shape

df.columns

df.dtypes

df.nunique()

df.isnull().sum()

df.describe()

df.corr

plt.figure (figsize = (10,10))
sns.heatmap(data = df.corr(), annot=True, cmap='Greens')

sns.pairplot(df,size= 5)

#Plot on Boxplot
plt.figure(figsize=(50,50))
df.boxplot()

#Minimum Price
df.PRICE.min()

#Maximum Price
df.PRICE.max()

#Standard Deviation
df.PRICE.std()

#Export the Dataset
df.to_csv('boston_datset.csv',)

#Machine Learning -Linear Regression
df.head()

x = np.array(df.drop('PRICE',axis=1))
y = np.array(df.PRICE)

#Splitting the Data
x_train, x_test, y_train, y_test= train_test_split(x,y,test_size=0.2, random_state=42)

len(x_train)

len(y_train)

len(x_test)

len(y_test)

#Choosing the Model
model = LinearRegression()

#Fitting/Train the Model
model.fit(x_train, y_train)

#Intercept Value
model.intercept_

#Coefficient Value
model.coef_

#Prediction
y_test

y_pred = model.predict(x_test)

y_pred

#Testing the model Performance
model.score(x_test, y_test)

